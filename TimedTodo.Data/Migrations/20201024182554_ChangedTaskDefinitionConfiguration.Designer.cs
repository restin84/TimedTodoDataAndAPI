// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimedTodo.Data;

namespace TimedTodo.Data.Migrations
{
    [DbContext(typeof(TimedTodoContext))]
    [Migration("20201024182554_ChangedTaskDefinitionConfiguration")]
    partial class ChangedTaskDefinitionConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimedTodo.Domain.TaskDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskDefinitions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("416ab440-6e4a-4dc7-9e93-7d55a90fabcd"),
                            Title = "TaskDefinition 1"
                        },
                        new
                        {
                            Id = new Guid("bcd70b09-2439-49d8-80f7-c3204a08cc26"),
                            Title = "TaskDefinition 2"
                        },
                        new
                        {
                            Id = new Guid("9c2d3e99-498b-4c19-8bb9-cff4b298b128"),
                            Title = "TaskDefinition 3"
                        },
                        new
                        {
                            Id = new Guid("7ea62ad2-ee80-487d-b643-f8f0807bbe47"),
                            Title = "TaskDefinition 4"
                        },
                        new
                        {
                            Id = new Guid("87b45e51-abb0-41a9-8d2c-03d23c22ed45"),
                            Title = "TaskDefinition 5"
                        },
                        new
                        {
                            Id = new Guid("5ccd9758-3bfc-4448-ba0a-8346b2be91cc"),
                            Title = "TaskDefinition 6"
                        },
                        new
                        {
                            Id = new Guid("58ef63c3-c1b3-4401-b2e9-c7cf7f118f29"),
                            Title = "TaskDefinition 7"
                        },
                        new
                        {
                            Id = new Guid("1d3bfb3b-0c37-4df5-91af-0c2180c0154d"),
                            Title = "TaskDefinition 8"
                        },
                        new
                        {
                            Id = new Guid("8854558d-5070-4feb-804b-465a9c30ebbd"),
                            Title = "TaskDefinition 9"
                        },
                        new
                        {
                            Id = new Guid("8e1b95f5-a28b-4b9c-9473-1c4157360d5e"),
                            Title = "TaskDefinition 10"
                        });
                });

            modelBuilder.Entity("TimedTodo.Domain.TaskInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ElapsedTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("TaskDefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskDefinitionId");

                    b.ToTable("TaskInstances");
                });

            modelBuilder.Entity("TimedTodo.Domain.TaskInstance", b =>
                {
                    b.HasOne("TimedTodo.Domain.TaskDefinition", "TaskDefinition")
                        .WithMany()
                        .HasForeignKey("TaskDefinitionId");
                });
#pragma warning restore 612, 618
        }
    }
}
